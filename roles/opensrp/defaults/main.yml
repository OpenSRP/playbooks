opensrp_git_url: "https://github.com/OpenSRP/opensrp-server-web.git"
opensrp_resource_sub_dirs:
  - "images"
  - "multimedia"
  - "qr-codes"
opensrp_mysql_port: 3306
opensrp_redis_version: 4.0.9
opensrp_mysql_host: "localhost"
opensrp_mysql_database: "opensrp"
opensrp_motech_database: "motechquartz"
opensrp_mysql_user: "opensrp"
opensrp_mysql_password: "opensrp"
opensrp_openmrs_url: "https://{{ openmrs_site_name }}/{{ openmrs_install_name }}/"
opensrp_install_name: "opensrp"
opensrp_resource_dir: "/var/lib/OpenSRP"
opensrp_version: "zeir-1.1.2"
opensrp_openmrs_user: "admin"
opensrp_openmrs_password: "admin"
opensrp_dhis_user: "admin"
opensrp_dhis_password: "admin"
opensrp_couchdb_server: "localhost"
opensrp_mysql_app_host: "localhost"
opensrp_couchdb_port: 5984
opensrp_couchdb_user: "root"
opensrp_couchdb_password: "root"
opensrp_rapidpro_token: ""
opensrp_nginx_max_filesize: "50M"
opensrp_local_checkout_path: "/tmp/opensrp"
opensrp_local_package_directory: "/tmp/opensrp-wars"
activemq_version: "5.12"
couchdb_databases:
  - "opensrp"
couchdb_admin_user: "root"
couchdb_admin_password: "root"
couchdb_version: "1.6.0-0ubuntu7"
couchdb_backups_to_s3: false
couchdb_lucene_install_path: "/opt/couchdb-lucene"
couchdb_lucene_support: true
couchdb_lucene_version_name: "v1.1.0"
couchdb_lucene_version_number: "1.1.0"
couchdb_backup_database: "opensrp"
allowed_couchdb_hosts: []
activemq_memory_opts: "-Xms2048M -Xmx2048M"
mysql_backups_to_s3: false
tomcat_user: "tomcat7"
tomcat_group: "tomcat7"
opensrp_tomcat_http_port: 8082
opensrp_tomcat_shutdown_port: 8007
opensrp_tomcat_ajp_port: 8012
tomcat_https_port: 8443
opensrp_tomcat_max_filesize: "52428800"
opensrp_tomcat_fsize_threshold: "10485760"
catalina_ops: "-Xms1500M -Xmx1500M"
ssl_key: "{{ opensrp_site_name }}-key.pem"
ssl_cert: "{{ opensrp_site_name }}-fullchain.pem"
opensrp_system_user: "opensrp"
opensrp_tomcat_instance: "tomcat-opensrp"
opensrp_user_home: "/home/{{ opensrp_system_user }}"
opensrp_psql_as_primary_database: true
opensrp_psql_table_space_dir: "/opt/postgres"
opensrp_psql_admin_user: "postgres"
opensrp_postgresql_user: "opensrp_admin"
opensrp_postgresql_database: "opensrp"
opensrp_redis_host: "localhost"
opensrp_redis_port: 6379
opensrp_redis_max_connections: 25
opensrp_authencation_cache_ttl: 600
opensrp_postgres_hba_config_host: "127.0.0.1/32"
opensrp_install_postgres: yes
opensrp_postgres_host: "localhost"
opensrp_install_mysql: yes
opensrp_mysql_root_user: "root"
opensrp_postgres_superuser: postgres
opensrp_postgres_superuser_password: ""
opensrp_java_packages:
  - openjdk-8-jre

# List of profiles to be activated. Only the specified profiles will
# be made active. Read more on OpenSRP Server profiles here:
# https://smartregister.atlassian.net/wiki/spaces/Documentation/pages/616595457/Server+Web+Build
opensrp_maven_package_profiles:
  - postgres
  - jedis
  - basic_auth
opensrp_oauth_default_client_id: "opensrp-trusted-client"
opensrp_oauth_default_secret: "O@aTHS#cr3t"
opensrp_oauth_default_grant_types:
  - password
  - authorization_code
  - refresh_token
  - implicit
opensrp_oauth_default_scope:
  - read
  - write
  - trust
opensrp_oauth_default_validity: 3600

# SSL
opensrp_ssl_src_dir: "/etc/letsencrypt/live/{{ opensrp_site_name }}"
opensrp_ssl_cert_file: "fullchain.pem"
opensrp_ssl_key_file: "privkey.pem"
opensrp_certs_from_letsencrypt: true

opensrp_http_site: "{{ opensrp_site_name }}-http"
opensrp_https_site: "{{ opensrp_site_name }}-https"

# Certbot
opensrp_certbot_site_names: ["{{ opensrp_site_name }}"]
opensrp_certbot_mail_address: ""

# Swap
opensrp_swap_file_size_mb: 2048
opensrp_swap_swappiness: 10
opensrp_install_swap: false

# NGINX
opensrp_nginx_sites:
  - server:
      name: "{{ opensrp_http_site }}"
      __listen: "80;\n  listen [::]:80;\n"
      server_name: "{{ opensrp_site_name }}"
      return: "301 https://$server_name$request_uri"
      ssl:
        enabled: false

  - server:
      name:  "{{ opensrp_https_site }}"
      __listen: "443;\n  listen [::]:443;\n"
      server_name: "{{ opensrp_site_name }}"
      client_max_body_size: "{{ opensrp_nginx_max_filesize }}"
      ssl:
        enabled: true
        cert: "{{ opensrp_ssl_cert_file }}"
        key:  "{{ opensrp_ssl_key_file }}"
        src_dir: "{{ opensrp_ssl_src_dir }}"
        conf: "{{ opensrp_site_name }}-ssl.conf"
        remote_src: "{{ opensrp_certs_from_letsencrypt }}"
        create_symlink: "{{ opensrp_certs_from_letsencrypt }}"

      location1:
        name: /
        return: "301 https://$host/{{ opensrp_install_name }}"

      location2:
        name: "/{{ opensrp_install_name }}"
        proxy_pass: "http://localhost:{{ opensrp_tomcat_http_port }}/{{ opensrp_install_name }}"
        proxy_read_timeout: "86400s"
        proxy_redirect: "off"
        proxy_next_upstream: "error timeout invalid_header http_502 http_503 http_504"
        proxy_set_header:
          - Host $host
          - X-Real-IP $remote_addr
          - X-Forwarded-For $proxy_add_x_forwarded_for
          - X-Forwarded-Host $server_name
          - X-Forwarded-Proto https
opensrp_nginx_log_dir: "/var/log/nginx"
opensrp_nginx_enabled_sites:
  - "{{ opensrp_http_site }}"
  - "{{ opensrp_https_site }}"

# Logstash
opensrp_install_logstash: false
opensrp_logstash_gelf_server: 127.0.0.1
opensrp_logstash_gelf_port: "12204"
opensrp_logstash_plugins:
  - logstash-input-file
  - logstash-output-gelf
opensrp_logstash_custom_outputs:
  - output: 'gelf'
    lines:
      - 'host => "{{ opensrp_logstash_gelf_server }}"'
      - 'port => "{{ opensrp_logstash_gelf_port }}"'
      - 'sender => "{{ opensrp_site_name }}"'
opensrp_logstash_custom_inputs:
  - input: 'file'
    lines:
      - 'path => ["{{ opensrp_nginx_log_dir }}/{{ opensrp_https_site }}-ssl-access.log"]'
      - 'start_position => "end"'
      - 'add_field => {'
      - '  ssl => true'
      - '  nginx_access => true'
      - '  from_nginx => true'
      - '  from_host => "%{host}"'
      - '  from_domain => "{{ opensrp_site_name }}"'
      - '  from_{{ opensrp_system_user }} => true'
      - '  git_version => "{{ opensrp_version }}"'
      - '}'
