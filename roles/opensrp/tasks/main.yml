---
- name: Check if OpenSRP already packaged
  stat: "path={{ opensrp_local_package_directory }}/{{ opensrp_version }}.war"
  register: opensrp_package
  delegate_to: 127.0.0.1

- include_tasks: compile.yml

- include_tasks: mysql.yml
  when: opensrp_mysql_database is defined

- name: Create OpenSRP resource directory
  become: yes
  become_user: root
  file:
    path: "{{ opensrp_resource_dir }}"
    owner: "{{ opensrp_system_user }}"
    group: "{{ tomcat_group }}"
    state: directory
    mode: 0755

- name: Create OpenSRP sub-directories
  become: yes
  become_user: root
  file:
    path: "{{ opensrp_resource_dir }}/{{ item }}"
    owner: "{{ opensrp_system_user }}"
    group: "{{ tomcat_group }}"
    state: directory
    mode: 0755
  with_items: "{{ opensrp_resource_sub_dirs }}"

# 1. We expect that the user that owns the directory is the OpenMRS user and not the
# OpenSRP user (this is why we don't set the user owner for the directory)
#
# 2. We expect that the OpenSRP user and the OpenMRS user both belong to the `tomcat_group`
# group (this is why we allow the tomcat_group group to write to the directory)
- name: Create OpenSRP multimedia directory
  become: yes
  become_user: root
  file:
    path: "{{ opensrp_multimedia_parent_directory }}"
    group: "{{ tomcat_group }}"
    state: directory
    mode: 0775

- name: Make sure the OpenSRP directory is absent in Tomcat's app directory
  become: yes
  become_user: root
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ opensrp_user_home }}/{{ opensrp_tomcat_instance }}/webapps/{{ opensrp_install_name }}.war"
    - "{{ opensrp_user_home }}/{{ opensrp_tomcat_instance }}/webapps/{{ opensrp_install_name }}"

- name: Copy the OpenSRP package
  become: yes
  become_user: root
  copy:
    src: "{{ opensrp_local_package_directory }}/{{ opensrp_version }}.war"
    dest: "{{ opensrp_user_home }}/{{ opensrp_tomcat_instance }}/webapps/{{ opensrp_install_name }}.war"
    owner: "{{ opensrp_system_user }}"
    group: "{{ tomcat_group }}"

- include_tasks: postgresql.yml
  when: opensrp_psql_as_primary_database
  tags:
  - postgresql

- name: Restart OpenSRP Tomcat Instance
  become: yes
  become_user: root
  service:
    name: "{{ opensrp_tomcat_instance }}"
    state: restarted

- name: Wait until the folder webapps/opensrp/WEB-INF is present before continuing. Tomcat is extracting war file
  become: yes
  become_user: root
  wait_for:
    path: "{{ opensrp_user_home }}/{{ opensrp_tomcat_instance }}/webapps/opensrp/WEB-INF"

- include_tasks: whitelabeling-copy-file.yml
  with_items: "{{ opensrp_whitelabeling_copy_files }}"
  loop_control:
    loop_var: "current_file" 